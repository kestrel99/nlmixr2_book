[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Nonlinear mixed-effects modelling with nlmixr2",
    "section": "",
    "text": "Welcome\nThis is the website for the work-in-progress “Nonlinear mixed-effects modelling with nlmixr2”.\nOur book will describe the installation of nlmixr2, and walk the reader through its use in pharmacological modelling and simulation using pharmacokinetic and pharmacodynamic data. We intend to start with simple examples and work towards more complex and useful applications. As well as the use of nlmixr2 as a routine tool in academic and industrial drug research and development, the book will elaborate on the structure of the tool so that readers interested in contributing to the project or developing extensions have a good starting point for doing so.\nReaders will need some familiarity with pharmacology and biostatistics to get the most out of the book.\nThis website is and will always be free, licensed under the CC BY-NC-ND 3.0 License. If you’d like a physical copy of the book, there’s one in the works."
  },
  {
    "objectID": "intro.html#pharmacometrics",
    "href": "intro.html#pharmacometrics",
    "title": "1  Introduction",
    "section": "1.1 Pharmacometrics",
    "text": "1.1 Pharmacometrics\nWikipedia defines pharmacometrics (PMx) as a field of study of the methodology and application of mathematical models for disease and pharmacological measurement. It applies mathematical models of biology, pharmacology, disease, and physiology to describe and quantify interactions between xenobiotics (drugs) and patients (human and non-human), including both beneficial and adverse effects. It is normally applied to combine data from drugs, diseases and clinical trials to aid efficient drug development, regulatory decisions and rational drug treatment in patients.\nPharmacometrics rolls up modeling and simulation for pharmacokinetics, pharmacodynamics, and #DiseaseProgression, with a focus on populations and variability. A major focus is to understand variability in drug response, which can be predictable (e.g. due to differences in body weight or kidney function) or unpredictable (differences between subjects seem random, but likely reflect a lack of knowledge or data).\nQuantitative systems pharmacology (QSP) is also considered to be a part of the PMx ecosystem, but applies a more theoretical and less data-driven approach to building models. QSP models are often much more complex than PK/PD models, with less of a populations focus.\nWhat this boils down to is using mathematical/statistical models to help explain and predict what the body does to the drug (pharmacokinetics, PK) and what the drug does to the body (pharmacodynamics, PD) - these are often combined to produce PKPD or exposure-response (ER) models. We build these using data collected from clinical trials (e.g. blood samples, clinical observations, scores, X-rays and suchlike - multiple samples, over time, from many subjects), which we use to build compartmental models which approximate what is happening over time using ordinary differential equations (ODEs).\nThis sounds complicated - and it can be - but it’s based on the well-stirred compartmental model for PK, a well-established set of principles for how systems like these can be approximated.\nI promised you beer! It’s actually a pretty good example. PK describes what happens to the alcohol (ethanol) you consume between the glass and the bathroom, and PD describes what it does while it’s circulating in your blood (quite a few things, including making you tipsy). Ethanol is a pretty interesting case, because it’s eye-wateringly complex. The “DrinkMe” simulation on Nick Holford’s website is a fun interactive example of how it fits together! You can find it at http://holford.fmhs.auckland.ac.nz/research/ethanol.\nSo pharmacometrics can help us understand how drugs behave in different people. The “DrinkMe” model includes body weight - the bigger you are, the bigger your organs are (usually) and the more machinery you have for metabolizing substances like ethanol, so the slower you get drunk, and if you’ve eaten something, the alcohol will take longer to get into your system (although these are just two aspects of a very complex system).\nThese principles apply to every drug we take, from aspirin to metformin (which is commonly used for treating diabetes). We use these models to figure out what an appropriate dose is, and what might affect it.\nWe can use pharmacometric models like these to simulate clinical trials, dose regimens and so on, in silico, so that we can predict what will happen when we actually give a drug to a human, and whether the design we have proposed for our clinical trial will actually work when we run it.\nLater on in drug development, as we get close to registration, we can use these models to identify covariates whcih might inform differences in exposure and effect between patients (like age, weight, and sex), and to quantify the relationships between dose, exposure, and response for efficacy (e.g. how well the drug does at reducing or eliminating a tumour) and safety (e.g. how many unwanted side effects the drug generates at a useful dose).\nIt’s not just about the drugs themselves. Drug-disease and disease progression models are also an area in which pharmacometrics continues to have an impact - FDA maintains a list the ones they’ve developed internally (https://www.fda.gov/about-fda/center-drug-evaluation-and-research-cder/division-pharmacometrics), including examples for Alzheimer’s disease and diabetes, although there are many, many more.\nSo far we’ve mostly talked about empirical, data-driven models, but pharmacometrics goes further, especially now that the computers are getting so fast (models take time to fit to data, and the more complex they are, and the more patients you have, the longer they take).\nPhysiologically-based PK (PBPK) models, for example, find the middle ground between PK and QSP, having a more mechanistic bent by taking into account anatomical, physiological, physical, and chemical descriptions of the phenomena involved in complex absorption, distribution, metabolic and elimination (ADME) processes, while remaining fundamentally driven by observed data."
  },
  {
    "objectID": "intro.html#nlmixr2",
    "href": "intro.html#nlmixr2",
    "title": "1  Introduction",
    "section": "1.2 nlmixr2",
    "text": "1.2 nlmixr2\nnlmixr2 is a set of packages - let’s call it the “mixrverse” - for R that provides an open source alternative for nonlinear mixed-effects (NLME) model development, which are the core of most pharmacometrics workflows (amongst others).\nModeling tools in our area are largely closed-source and massively expensive, and are a gigantic entry barrier for new people, especially in low and middle-income countries (and borderline unaffordable even for CROs like mine). nlmixr2 is intended to be a solution to this problem."
  },
  {
    "objectID": "intro.html#what-you-will-learn",
    "href": "intro.html#what-you-will-learn",
    "title": "1  Introduction",
    "section": "1.3 What you will learn",
    "text": "1.3 What you will learn\nThis book is intended to be a guide to using nlmixr2 and its constellation of supporting and allied packages in R to develop and use nonlinear mixed-effect pharmacometric models. It is not going to teach you pharmacology, or the core tenets of pharmacometrics. You can learn about those elsewhere.\nYou will, however, learn to construct datasets for analysis, to write models in rxode2 and nlmixr2, to fit them using nlmixr2, to use shinyMixR for tracking model development steps, to use xpose.nlmixr2 for model evaluation, to use babelmixr to cross-convert models from different tools, and to use PKNCA for figuring out initial estimates. You’ll also learn how the “mixrverse” ecosystem has been constructed and how to work with it efficiently.\nThroughout the book, we’ll point you to resources where you can learn more."
  },
  {
    "objectID": "intro.html#how-this-book-is-organised",
    "href": "intro.html#how-this-book-is-organised",
    "title": "1  Introduction",
    "section": "1.4 How this book is organised",
    "text": "1.4 How this book is organised\nWe start off with a summary of nlmixr2 and all its dependencies, and how they’re built and work together. This is essential for understanding why things have been set up in the way they have, and how to drill down into the source code to figure out what is actually happening under the hood. It is not, however, essential if you want to dive straight into modeling.\nWe then get into datasets - how they should be structured, how events like doses are handled, visualization, and what variables should be.\nNext up, we look at a simple PK model, to illustrate how models can be written - both with closed-form solutions and ODEs - as well as how nlmixr2 objects are constructed, and how to extract information from them. We’ll use this example to explore the various minimization algorithms that are available and how to tune them.\nWe’ll then move on to a more complex PK example, to illustrate some of nlmixr2’s niftier features, like transit absorption models, and how to use the various diagnostics that are available, as well as shinyMixR. We’ll then segue into simulation (using rxode2) to see how pharmacometric models can be used to predict clinical trial outcomes, for example.\nPK/PD models will be demonstrated using a version of the legendary haematological toxicity (“hemtox”) model, along with a practical demonstration of how it can be used to predict neutropenia rates.\nFinally, we’ll wrap up with a demonstration of using babelmixr to import models from NONMEM, and PKNCA for providing credible initial estimates, and some guidelines on how you can contribute to the project if you so wish. nlmixr2 is, after all, an open-source project and relies entirely on volunteers for its development and maintenance.\nWithin each chapter, we try and adhere to a similar pattern: start with some motivating examples so you can see the bigger picture, and then dive into the details. Each section of the book is paired with exercises to help you practice what you’ve learned.\nAlthough it can be tempting to skip the exercises, there’s no better way to learn than practicing on real problems."
  },
  {
    "objectID": "intro.html#what-you-wont-learn",
    "href": "intro.html#what-you-wont-learn",
    "title": "1  Introduction",
    "section": "1.5 What you won’t learn",
    "text": "1.5 What you won’t learn\nThere are some topics that this book doesn’t cover, simply because there isn’t space.\n\n1.5.1 Pharmacology\nThis is quite a big one. You can’t be an effective pharmacometrician unless you’re up to speed with basic pharmacology, which you can’t pick up in an afternoon. We’ll be touching on pharmacology concepts throughout, but we’re assuming you already know the theory. There are quite a few good books that can serve as an introduction to the topic - we particularly like Rowland & Tozer (1).\n\n\n1.5.2 Pharmacometrics\nEven bigger. Although you’ll be able to infer a lot of things as we go, it would help if you already know what compartmental nonlinear mixed-effects models are and how they can be used to model the behaviour of drugs. Mould & Upton published a nice overview of the field a decade or so ago (2–4), and there are good textbooks as well (5,6).\n\n\n1.5.3 Big data\nThis book assumes you’re working with relatively small in-memory datasets. The kinds of models we talk about here don’t work well with bigger ones.\n\n\n1.5.4 Data science\nWe are dealing with specifically pharmacometric data analysis round these parts. If it’s pure data science you’re interested in, we heartily recommend R for Data Science, which provides a comprehensive grounding. (We also swiped its structure for our book, which is a compliment of a sort, we guess.)\n\n\n1.5.5 Python/Julia/Matlab/SAS/Ruby on Rails/etc\nIn this book, you won’t learn anything about Python, Julia, JavaScript or any other language outside of R. This is because nlmixr2 is written in R.\nR is an environment designed from the ground up to support quantitative science, being not just a programming language, but also an interactive environment. It is - in our opinion - a much more flexible language than many of its peers."
  },
  {
    "objectID": "intro.html#prerequisites",
    "href": "intro.html#prerequisites",
    "title": "1  Introduction",
    "section": "1.6 Prerequisites",
    "text": "1.6 Prerequisites\nThere’s some things we assume you know to get the most out of this book. We expect you to know your way around numbers and math, and to have at least basic experience with programming in R. If you’re new to R programming, Hands on Programming with R is a highly-recommended place to start.\nYou need a computer running a recent version of Windows, macOS or Linux with a decent amount of RAM, and some software.\n\n1.6.1 R\nR is free and open source, and can be freely downloaded from CRAN, the comprehensive R archive network. CRAN is composed of a vast collection of mirrored servers located around the world and is used to distribute R and R packages. Rather than trying to pick the nearest server, use the cloud mirror, https://cloud.r-project.org, which automatically does the heavy lifting for you. New major releases come once a year, interspersed with 2-3 minor releases. It’s a good idea to keep current, but we know that people in the pharma industry aren’t necessarily able to do this. That being said, you need version 4.2.2 or better for this book.\n\n\n1.6.2 RStudio\nRStudio is an integrated development environment, or IDE, for R and Python. You can get it from https://posit.co/download/rstudio-desktop/. You’ll need at least version 2022.07.2+576.\n\n\n1.6.3 nlmixr2 and friends\nIt goes without saying that you’ll need to install some additional R packages. An R package is, essentially, a bundle of functions, data, and documentation that can be added to base R to extend its capabilities. As of today, there are tens of thousands of them.\nInstall nlmixr2 and its many dependencies from CRAN by entering the following code into R (or RStudio):\n\ninstall.packages(\"nlmixr2\",\"sessioninfo\",\"pmxTools\",\"PKNCA\",\"babelmixr2\",\"xpose.nlmixr2\")\n\nOnce installed, it can be loaded as follows. Note that you can’t use it until it’s been loaded.\n\nlibrary(nlmixr2)\n\nLoading required package: nlmixr2data"
  },
  {
    "objectID": "intro.html#acknowledgements",
    "href": "intro.html#acknowledgements",
    "title": "1  Introduction",
    "section": "1.7 Acknowledgements",
    "text": "1.7 Acknowledgements\nnlmixr2 is the product of countless hours of hard work by many, many contributors. In particular the authors wish to acknowledge Wenping Wang, who started this project, and is in no small part responsible for its continuing success.\nWe would also like to highlight the contributions of our employers, whose generous donation of our time to this project have enabled it to grow into what it is today. So heartfelt thanks to Novartis (in particular, Lisa Hendricks and Mick Looby), Occams, LAP&P, Certara, Seattle Genetics, and Johnson & Johnson for letting us play in this wonderful sandbox."
  },
  {
    "objectID": "intro.html#colophon",
    "href": "intro.html#colophon",
    "title": "1  Introduction",
    "section": "1.8 Colophon",
    "text": "1.8 Colophon\nThis book is powered by Quarto which makes it easy to write books that combine text and executable code.\nThis book was built with:\n\nsessioninfo::session_info(c(\"nlmixr2\"))\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.2.2 (2022-10-31 ucrt)\n os       Windows 10 x64 (build 22621)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  English_World.utf8\n ctype    English_World.utf8\n tz       Europe/Berlin\n date     2022-11-16\n pandoc   2.19.2 @ C:/Program Files/RStudio/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n !  package       * version     date (UTC) lib source\n    askpass         1.1         2019-01-13 [1] CRAN (R 4.2.2)\n    assertthat      0.2.1       2019-03-21 [1] CRAN (R 4.2.2)\n P  backports       1.4.1       2021-12-13 [?] CRAN (R 4.2.0)\n    base64enc       0.1-3       2015-07-28 [1] CRAN (R 4.2.0)\n    BH              1.78.0-0    2021-12-15 [1] CRAN (R 4.2.0)\n    binom           1.1-1.1     2022-05-02 [1] CRAN (R 4.2.2)\n    bit             4.0.4       2020-08-04 [1] CRAN (R 4.2.2)\n    bit64           4.0.5       2020-08-30 [1] CRAN (R 4.2.2)\n    bitops          1.0-7       2021-04-24 [1] CRAN (R 4.2.0)\n    boot            1.3-28      2021-05-03 [1] CRAN (R 4.2.2)\n P  cachem          1.0.6       2021-08-19 [?] CRAN (R 4.2.2)\n    cellranger      1.1.0       2016-07-27 [1] CRAN (R 4.2.2)\n P  checkmate       2.1.0       2022-04-21 [?] CRAN (R 4.2.2)\n    class           7.3-20      2022-01-16 [1] CRAN (R 4.2.2)\n    classInt        0.4-8       2022-09-29 [1] CRAN (R 4.2.2)\n P  cli             3.4.1       2022-09-23 [?] CRAN (R 4.2.2)\n    clipr           0.8.0       2022-02-22 [1] CRAN (R 4.2.2)\n    cluster         2.1.4       2022-08-22 [1] CRAN (R 4.2.2)\n P  colorspace      2.0-3       2022-02-21 [?] CRAN (R 4.2.2)\n    commonmark      1.8.1       2022-10-14 [1] CRAN (R 4.2.2)\n    cpp11           0.4.3       2022-10-12 [1] CRAN (R 4.2.2)\n    crayon          1.5.2       2022-09-29 [1] CRAN (R 4.2.2)\n    curl            4.3.3       2022-10-06 [1] CRAN (R 4.2.2)\n P  data.table      1.14.4      2022-10-17 [?] CRAN (R 4.2.2)\n    deldir          1.0-6       2021-10-23 [1] CRAN (R 4.2.1)\n    Deriv           4.1.3       2021-02-24 [1] CRAN (R 4.2.2)\n    DescTools       0.99.47     2022-10-22 [1] CRAN (R 4.2.2)\n P  digest          0.6.30      2022-10-18 [?] CRAN (R 4.2.2)\n P  dparser         1.3.1-9     2022-11-10 [?] CRAN (R 4.2.2)\n P  dplyr           1.0.10      2022-09-01 [?] CRAN (R 4.2.2)\n    e1071           1.7-12      2022-10-24 [1] CRAN (R 4.2.2)\n    ellipsis        0.3.2       2021-04-29 [1] CRAN (R 4.2.2)\n P  evaluate        0.17        2022-10-07 [?] CRAN (R 4.2.2)\n    Exact           3.2         2022-09-25 [1] CRAN (R 4.2.1)\n    expm            0.999-6     2021-01-13 [1] CRAN (R 4.2.2)\n P  fansi           1.0.3       2022-03-24 [?] CRAN (R 4.2.2)\n    farver          2.1.1       2022-07-06 [1] CRAN (R 4.2.2)\n P  fastmap         1.1.0       2021-01-25 [?] CRAN (R 4.2.2)\n    foreign         0.8-83      2022-09-28 [1] CRAN (R 4.2.2)\n    Formula         1.2-4       2020-10-16 [1] CRAN (R 4.2.0)\n P  generics        0.1.3       2022-07-05 [?] CRAN (R 4.2.2)\n P  ggplot2         3.4.0       2022-11-04 [?] CRAN (R 4.2.2)\n    ggtext          0.1.2       2022-09-16 [1] CRAN (R 4.2.2)\n    gld             2.6.6       2022-10-23 [1] CRAN (R 4.2.2)\n P  glue            1.6.2       2022-02-24 [?] CRAN (R 4.2.2)\n    gridExtra       2.3         2017-09-09 [1] CRAN (R 4.2.2)\n    gridtext        0.1.5       2022-09-16 [1] CRAN (R 4.2.2)\n P  gtable          0.3.1       2022-09-01 [?] CRAN (R 4.2.2)\n    highr           0.9         2021-04-16 [1] CRAN (R 4.2.2)\n    Hmisc           4.7-1       2022-08-15 [1] CRAN (R 4.2.2)\n    hms             1.1.2       2022-08-19 [1] CRAN (R 4.2.2)\n    htmlTable       2.4.1       2022-07-07 [1] CRAN (R 4.2.2)\n P  htmltools       0.5.3       2022-07-18 [?] CRAN (R 4.2.2)\n P  htmlwidgets     1.5.4       2021-09-08 [?] CRAN (R 4.2.2)\n    httr            1.4.4       2022-08-17 [1] CRAN (R 4.2.2)\n    inline          0.3.19      2021-05-31 [1] CRAN (R 4.2.2)\n    interp          1.1-3       2022-07-13 [1] CRAN (R 4.2.2)\n    isoband         0.2.6       2022-10-06 [1] CRAN (R 4.2.2)\n    jpeg            0.1-9       2021-07-24 [1] CRAN (R 4.2.0)\n P  jsonlite        1.8.3       2022-10-21 [?] CRAN (R 4.2.2)\n    KernSmooth      2.23-20     2021-05-03 [1] CRAN (R 4.2.2)\n P  knitr           1.40        2022-08-24 [?] CRAN (R 4.2.2)\n    labeling        0.4.2       2020-10-20 [1] CRAN (R 4.2.0)\n P  lattice         0.20-45     2021-09-22 [?] CRAN (R 4.2.2)\n    latticeExtra    0.6-30      2022-07-04 [1] CRAN (R 4.2.2)\n    lazyeval        0.2.2       2019-03-15 [1] CRAN (R 4.2.2)\n P  lbfgsb3c        2020-3.2    2020-03-03 [?] CRAN (R 4.2.2)\n P  lifecycle       1.0.3       2022-10-07 [?] CRAN (R 4.2.2)\n    lmom            2.9         2022-05-29 [1] CRAN (R 4.2.0)\n P  lotri           0.4.2       2022-06-18 [?] CRAN (R 4.2.2)\n P  magrittr        2.0.3       2022-03-30 [?] CRAN (R 4.2.2)\n    markdown        1.3         2022-10-29 [1] CRAN (R 4.2.2)\n    MASS            7.3-58.1    2022-08-03 [1] CRAN (R 4.2.2)\n    Matrix          1.5-1       2022-09-13 [1] CRAN (R 4.2.2)\n P  memoise         2.0.1       2021-11-26 [?] CRAN (R 4.2.2)\n    mgcv            1.8-41      2022-10-21 [1] CRAN (R 4.2.2)\n    mime            0.12        2021-09-28 [1] CRAN (R 4.2.0)\n    minpack.lm      1.2-2       2022-04-13 [1] CRAN (R 4.2.2)\n    minqa           1.2.5       2022-10-19 [1] CRAN (R 4.2.2)\n P  munsell         0.5.0       2018-06-12 [?] CRAN (R 4.2.2)\n    mvtnorm         1.1-3       2021-10-08 [1] CRAN (R 4.2.0)\n P  n1qn1           6.0.1-11    2022-10-18 [?] CRAN (R 4.2.2)\n P  nlme            3.1-160     2022-10-10 [?] CRAN (R 4.2.2)\n P  nlmixr2       * 2.0.8       2022-10-23 [?] CRAN (R 4.2.2)\n P  nlmixr2data   * 2.0.7       2022-04-22 [?] CRAN (R 4.2.0)\n P  nlmixr2est      2.1.2       2022-11-03 [?] https://nlmixr2.r-universe.dev (R 4.2.2)\n    nlmixr2extra    2.0.8       2022-10-22 [1] CRAN (R 4.2.2)\n P  nlmixr2plot     2.0.7       2022-10-20 [?] CRAN (R 4.2.2)\n    nnet            7.3-18      2022-09-28 [1] CRAN (R 4.2.2)\n    numDeriv        2016.8-1.1  2019-06-06 [1] CRAN (R 4.2.0)\n    openssl         2.0.4       2022-10-17 [1] CRAN (R 4.2.2)\n    optextras       2019-12.4   2019-12-20 [1] CRAN (R 4.2.0)\n    pander          0.6.5       2022-03-18 [1] CRAN (R 4.2.2)\n P  pillar          1.8.1       2022-08-19 [?] CRAN (R 4.2.2)\n P  pkgconfig       2.0.3       2019-09-22 [?] CRAN (R 4.2.2)\n    png             0.1-7       2013-12-03 [1] CRAN (R 4.2.0)\n P  PreciseSums     0.5         2022-04-22 [?] CRAN (R 4.2.2)\n    prettyunits     1.1.1       2020-01-24 [1] CRAN (R 4.2.2)\n    progress        1.2.2       2019-05-16 [1] CRAN (R 4.2.2)\n    proxy           0.4-27      2022-06-09 [1] CRAN (R 4.2.2)\n    purrr           0.3.5       2022-10-06 [1] CRAN (R 4.2.2)\n P  qs              0.25.4      2022-08-09 [?] CRAN (R 4.2.2)\n P  R6              2.5.1       2021-08-19 [?] CRAN (R 4.2.2)\n P  RApiSerialize   0.1.2       2022-08-25 [?] CRAN (R 4.2.1)\n    RColorBrewer    1.1-3       2022-04-03 [1] CRAN (R 4.2.0)\n P  Rcpp            1.0.9       2022-07-08 [?] CRAN (R 4.2.2)\n    RcppArmadillo   0.11.4.0.1  2022-10-02 [1] CRAN (R 4.2.2)\n    RcppEigen       0.3.3.9.2   2022-04-08 [1] CRAN (R 4.2.2)\n PD RcppParallel    5.1.5       2022-01-05 [?] CRAN (R 4.2.2)\n    RCurl           1.98-1.9    2022-10-03 [1] CRAN (R 4.2.1)\n    readr           2.1.3       2022-10-01 [1] CRAN (R 4.2.2)\n    readxl          1.4.1       2022-08-17 [1] CRAN (R 4.2.2)\n    rematch         1.0.1       2016-04-21 [1] CRAN (R 4.2.2)\n    rex             1.2.1       2021-11-26 [1] CRAN (R 4.2.2)\n P  rlang           1.0.6       2022-09-24 [?] CRAN (R 4.2.2)\n    rootSolve       1.8.2.3     2021-09-29 [1] CRAN (R 4.2.0)\n    rpart           4.1.19      2022-10-21 [1] CRAN (R 4.2.2)\n P  rstudioapi      0.14        2022-08-22 [?] CRAN (R 4.2.2)\n    Rvmmin          2018-4.17.1 2021-04-18 [1] CRAN (R 4.2.2)\n P  rxode2          2.0.11      2022-11-01 [?] CRAN (R 4.2.2)\n P  rxode2et        2.0.9.9000  2022-10-25 [?] https://nlmixr2.r-universe.dev (R 4.2.1)\n    rxode2ll        2.0.9.9000  2022-10-20 [1] https://nlmixr2.r-universe.dev (R 4.2.1)\n P  rxode2parse     2.0.13      2022-11-10 [?] CRAN (R 4.2.2)\n P  rxode2random    2.0.9       2022-10-11 [?] CRAN (R 4.2.2)\n P  scales          1.2.1       2022-08-20 [?] CRAN (R 4.2.2)\n    sitmo           2.0.2       2021-10-13 [1] CRAN (R 4.2.2)\n    StanHeaders     2.21.0-7    2020-12-17 [1] CRAN (R 4.2.2)\n P  stringfish      0.15.7      2022-04-13 [?] CRAN (R 4.2.2)\n P  stringi         1.7.8       2022-07-11 [?] CRAN (R 4.2.1)\n P  stringr         1.4.1       2022-08-20 [?] CRAN (R 4.2.2)\n    survival        3.4-0       2022-08-09 [1] CRAN (R 4.2.2)\n P  symengine       0.2.2       2022-10-23 [?] CRAN (R 4.2.2)\n P  sys             3.4.1       2022-10-18 [?] CRAN (R 4.2.2)\n P  tibble          3.1.8       2022-07-22 [?] CRAN (R 4.2.2)\n    tidyr           1.2.1       2022-09-08 [1] CRAN (R 4.2.2)\n P  tidyselect      1.2.0       2022-10-10 [?] CRAN (R 4.2.2)\n    tzdb            0.3.0       2022-03-28 [1] CRAN (R 4.2.2)\n    ucminf          1.1-4.1     2022-09-29 [1] CRAN (R 4.2.1)\n P  utf8            1.2.2       2021-07-24 [?] CRAN (R 4.2.2)\n P  vctrs           0.5.0       2022-10-22 [?] CRAN (R 4.2.2)\n    viridis         0.6.2       2021-10-13 [1] CRAN (R 4.2.2)\n    viridisLite     0.4.1       2022-08-22 [1] CRAN (R 4.2.2)\n P  vpc             1.2.2       2021-01-11 [?] CRAN (R 4.2.2)\n    vroom           1.6.0       2022-09-30 [1] CRAN (R 4.2.2)\n    withr           2.5.0       2022-03-03 [1] CRAN (R 4.2.2)\n P  xfun            0.34        2022-10-18 [?] CRAN (R 4.2.2)\n    xgxr            1.1.1       2021-04-22 [1] CRAN (R 4.2.2)\n    xml2            1.3.3       2021-11-30 [1] CRAN (R 4.2.2)\n P  yaml            2.3.6       2022-10-18 [?] CRAN (R 4.2.1)\n\n [1] C:/Occams/Local/GitHub/nlmixr2_book/renv/library/R-4.2/x86_64-w64-mingw32\n [2] C:/Users/justin/AppData/Local/Temp/RtmpKOv5VX/renv-system-library\n\n P ── Loaded and on-disk path mismatch.\n D ── DLL MD5 mismatch, broken installation.\n\n──────────────────────────────────────────────────────────────────────────────\n\n\n\n\n\n\n1. Derendorf H, Schmidt S. Rowland and Tozer’s Clinical Pharmacokinetics and Pharmacodynamics: Concepts and Applications. Wolters Kluwer; 2019. \n\n\n2. Mould DR, Upton RN. Basic Concepts in Population Modeling, Simulation, and Model-Based Drug Development. CPT: Pharmacometrics & Systems Pharmacology. 2012;1(9):e6. \n\n\n3. Mould DR, Upton RN. Basic concepts in population modeling, simulation, and model-based drug development - Part 2: Introduction to pharmacokinetic modeling methods. CPT: Pharmacometrics and Systems Pharmacology. 2013 Apr;2(4). \n\n\n4. Upton RN, Mould DR. Basic concepts in population modeling, simulation, and model-based drug development: Part 3-introduction to pharmacodynamic modeling methods. CPT: Pharmacometrics and Systems Pharmacology. 2014 Jan;3(1). \n\n\n5. Ette EI, Williams PJ. Pharmacometrics: The science of quantitative pharmacology. Wiley; 2007. \n\n\n6. Gabrielsson J, Weiner D. Pharmacokinetic and Pharmacodynamic Data Analysis: Concepts and Applications, Fourth Edition. Taylor & Francis; 2007."
  },
  {
    "objectID": "history.html#in-the-beginning-there-was-rxode",
    "href": "history.html#in-the-beginning-there-was-rxode",
    "title": "2  History",
    "section": "2.1 In the beginning, there was RxODE",
    "text": "2.1 In the beginning, there was RxODE\nOur story begins with RxODE. RxODE was developed by Melissa Hallow and Wenping Wang as an R package for facilitating quick and efficient simulations of ODE models (1), and when it was presented by Melissa Hallow at the PAGE meeting in Crete in 2015 (2), the idea was floated to use its machinery for parameter estimation using nlme, the R implementation of nonlinear mixed-effects models by Pinheiro and Bates (3). As it turned out, work was already pretty advanced by that time, and parameter estimation with both nlme and stochastic annealing expectation maximization (SAEM) (4) was implemented by Wenping by the end of that year."
  },
  {
    "objectID": "history.html#stan-and-deliver",
    "href": "history.html#stan-and-deliver",
    "title": "2  History",
    "section": "2.2 Stan and deliver",
    "text": "2.2 Stan and deliver\nThe next milestone came at ACoP6 the same year, when Yuan Xiong first presented PMXstan (5). Applying fully Bayesian approaches to pharmacometric modeling has always been a challenging task, and PMXstan was proposed as a way to bridge the gap. Stan implements gradient-based Markov chain Monte Carlo (MCMC) algorithms for Bayesian inference, stochastic, gradient-based variational Bayesian methods for approximate Bayesian inference, and gradient-based optimization for penalized maximum likelihood estimation, and can easily be run from R. However, before PMXstan, pharmacometricians had to write their own Stan code to describe PKPD models, and preparing data files was arduous and counter-intuitive for those used to event-based data files like those used in NONMEM. Also, there were no efficient ODE solvers that could handle stiff systems that would work with its No-U-Turn Sampler (NUTS). PMXstan solved this by providing wrappers for the more unfriendly parts of the process, closed-form solutions for common PK systems written in Stan code, and a NUTS-compatible template LSODA solver to deal with stiff ODE systems. Significantly, these were components that would become quite important for a more general nonlinear mixed-effects (NLME) model fitting tool."
  },
  {
    "objectID": "history.html#github",
    "href": "history.html#github",
    "title": "2  History",
    "section": "2.3 GitHub",
    "text": "2.3 GitHub\nThe first nlmixr commit to GitHub was on 19 October 2016, and by then a small team had sprung up around the project, with Wenping Wang and Yuan Xiong at its core within Novartis, and a small group of interested parties including Teun Post and Richard Hooijmaaijers at LAP&P and Rik Schoemaker and Justin Wilkins at Occams.\nIn December 2016, nlmixr was presented to the modeling group at Uppsala University, where the implementation of the first-order conditional estimation method with interaction (FOCEI) by Almquist and colleagues (6) was first discussed."
  },
  {
    "objectID": "history.html#cran",
    "href": "history.html#cran",
    "title": "2  History",
    "section": "2.4 CRAN",
    "text": "2.4 CRAN\nMatt Fidler joined the team at Novartis in January 2017, and implemented the FOCEI method, bringing the number of available algorithms to three. June 2017 saw the introduction of a unified user interface across all three algorithms, a major milestone, and our first CRAN release was nlmixr 0.9.0-1 on 9 November 2017. An official 1.0 would follow in August 2018. By now the team had widened to include Mirjam Trame, who, together with Wenping, was using nlmixr as the core of a series of pharmacometric training courses in Cuba and elsewhere in Central and South America."
  },
  {
    "objectID": "history.html#first-peer-reviewed-publications",
    "href": "history.html#first-peer-reviewed-publications",
    "title": "2  History",
    "section": "2.5 First peer-reviewed publications",
    "text": "2.5 First peer-reviewed publications\nAlthough nlmixr had been a regular fixture at PAGE and ACoP in the intervening years, our first major publication would arrive in 2019, in the form of a tutorial introducing nlmixr to the wider pharmacometric world (7), and two months later, a comparison of algorithms between nlmixr and its gold standard commercial alternatives (FOCEI in NONMEM and SAEM in Monolix) followed (8)."
  },
  {
    "objectID": "history.html#streamlining-and-modularization",
    "href": "history.html#streamlining-and-modularization",
    "title": "2  History",
    "section": "2.6 Streamlining and modularization",
    "text": "2.6 Streamlining and modularization\nInstalling nlmixr was, at this time, a complicated and daunting undertaking, and although many in the pharmacometrics community had taken to nlmixr with enthusiasm, this was a large disadvantage that, to be frank, was turning people off. It had long been necessary to use Python for handling some aspects of FOCEI fitting, and getting it to work properly together with R was hard. This was further complicated by CRAN’s effective but very rigid package review and approval system, which was leading to endless problems with keeping the various dependencies nlmixr had in sync with one another. In April 2021, nlmixr 2.0 was unleashed upon the world, and Python was left behind forever. To say this was a relief to the development team was to understate the emotional catharsis that occurred.\nAlthough this solved one problem, another had been brewing. nlmixr had become a large package by R standards, and compile times at CRAN had begun to irk its administrators, leading to significant delays in approval. This eventually led to the decision to reimplement nlmixr as a series of closely linked, modular packages as opposed to a single monolithic unit. Rather than reverse-engineer the original nlmixr, the decision was taken to fork the project, and nlmixr2 was born in February 2022. nlmixr would remain on GitHub, but would no longer be developed actively, while new features and ongoing improvements would be applied to nlmixr2. The first CRAN release of nlmixr2 took place in June 2022.\nUp to 26 March 2022, the date on which the last commit was made to the original version of nlmixr, there were 2,403 commits to the nlmixr repository and 17 more CRAN releases. RxODE had 4,860 commits and 33 CRAN releases (some before nlmixr’s time, but we’re just going to go ahead and count them anyway)."
  },
  {
    "objectID": "history.html#community-enthusiasm",
    "href": "history.html#community-enthusiasm",
    "title": "2  History",
    "section": "2.7 Community enthusiasm",
    "text": "2.7 Community enthusiasm\nOver the years, we’ve hosted numerous tutorials at the major pharmacometrics meetings (PAGE, ACoP, PAGANZ and WCoP), and used nlmixr as the centrepoint for a series of well-received pharmacometrics courses in Cuba and elsewhere. We’ve also managed to publish a bit (9), as have others (we get into this a little later on). Our tutorial in Clinical Pharmacology & Therapeutics: Pharmacometrics & Systems Pharmacology (7) was one of that journal’s top ten most-read articles in 2021, with over 4,000 downloads. Our article had been one of the top 10% most-downloaded papers in 2018-2019, and having such interest for the second time in a row is tremendously encouraging for all of us! We hope it’s a reflection of the enthusiasm the community is building for our tool, and hope that it will continue.\nThis book is the next step in our journey; we hope you’ll take it with us.\n\n\n\n\n1. Wang W, Hallow KM, James DA. A tutorial on RxODE: Simulating differential equation pharmacometric models in R. CPT: Pharmacometrics and Systems Pharmacology. 2016;5(1):3–10. \n\n\n2. Hallow KM, James DA, Wang W. Interactive evaluation of dosing regimens for a novel anti-diabetic agent: a case-study in the application of RxODE. In: PAGE 24 [Internet]. 2015. p. Abstr 3542. Available from: https://www.page-meeting.org/?abstract=3542\n\n\n3. Pinheiro JC, Bates DM. Mixed-effects models in s and s-PLUS. New York: Springer; 2000. \n\n\n4. Delyon BYB, Lavielle M, Moulines E. Convergence of a stochastic approximation version of the EM algorithm. Annals of Statistics [Internet]. 1999;27(1):94–128. Available from: https://arxiv.org/abs/arXiv:1011.1669v3\n\n\n5. Xiong Y, James D, He F, Wang W. PMXstan: An R Library to Facilitate PKPD Modeling with Stan (M-01). Journal of Pharmacokinetics and Pharmacodynamics. 2015 Oct;42(S1):S11. \n\n\n6. Almquist J, Leander J, Jirstrand M. Using sensitivity equations for computing gradients of the FOCE and FOCEI approximations to the population likelihood. Journal of Pharmacokinetics and Pharmacodynamics. 2015;42(3):191–209. \n\n\n7. Fidler M, Wilkins JJ, Hooijmaijers R, Post TM, Schoemaker R, Trame MN, et al. Nonlinear Mixed-Effects Model Development and Simulation Using nlmixr and Related R Open-Source Packages. CPT: Pharmacometrics and Systems Pharmacology. 2019 Sep;8(9):621–33. \n\n\n8. Schoemaker R, Fidler M, Laveille C, Wilkins JJ, Hooijmaijers R, Post TM, et al. Performance of the SAEM and FOCEI Algorithms in the Open-Source, Nonlinear Mixed Effect Modeling Tool nlmixr. CPT: Pharmacometrics and Systems Pharmacology. 2019;8(12):923–30. \n\n\n9. Fidler M, Hooijmaijers R, Schoemaker R, Wilkins JJ, Xiong Y, Wang W. R and nlmixr as a gateway between statistics and pharmacometrics. CPT: Pharmacometrics and Systems Pharmacology. 2021 Apr;10(4):283–5."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "1. Derendorf H, Schmidt S. Rowland and\nTozer’s Clinical Pharmacokinetics\nand Pharmacodynamics: Concepts and\nApplications. Wolters Kluwer; 2019. \n\n\n2. Mould DR, Upton RN. Basic\nConcepts in Population Modeling, Simulation, and Model-Based Drug\nDevelopment. CPT: Pharmacometrics & Systems Pharmacology.\n2012;1(9):e6. \n\n\n3. Mould DR, Upton RN. Basic\nconcepts in population modeling, simulation, and model-based drug\ndevelopment - Part 2: Introduction to pharmacokinetic modeling\nmethods. CPT: Pharmacometrics and Systems Pharmacology. 2013\nApr;2(4). \n\n\n4. Upton RN, Mould DR. Basic\nconcepts in population modeling, simulation, and model-based drug\ndevelopment: Part 3-introduction to pharmacodynamic modeling\nmethods. CPT: Pharmacometrics and Systems Pharmacology. 2014\nJan;3(1). \n\n\n5. Gabrielsson J, Weiner D. Pharmacokinetic and\nPharmacodynamic Data Analysis:\nConcepts and Applications, Fourth\nEdition. Taylor & Francis; 2007. \n\n\n6. Ette\nEI, Williams PJ. Pharmacometrics: The science of quantitative\npharmacology. Wiley; 2007. \n\n\n7. Wang\nW, Hallow KM, James DA. A\ntutorial on RxODE: Simulating differential equation pharmacometric\nmodels in R. CPT: Pharmacometrics and Systems Pharmacology.\n2016;5(1):3–10. \n\n\n8. Hallow KM, James DA, Wang W. Interactive evaluation of dosing regimens for a novel\nanti-diabetic agent: a case-study in the application of RxODE.\nIn: PAGE 24 [Internet]. 2015. p. Abstr 3542. Available from: https://www.page-meeting.org/?abstract=3542\n\n\n9. Pinheiro JC, Bates DM. Mixed-effects models in s and\ns-PLUS. New York: Springer; 2000. \n\n\n10. Delyon BYB, Lavielle M, Moulines E. Convergence of a stochastic approximation version of the\nEM algorithm. Annals of Statistics [Internet]. 1999;27(1):94–128.\nAvailable from: https://arxiv.org/abs/arXiv:1011.1669v3\n\n\n11. Xiong Y, James D, He F, Wang W. PMXstan: An R Library to Facilitate PKPD Modeling with\nStan (M-01). Journal of Pharmacokinetics and\nPharmacodynamics. 2015 Oct;42(S1):S11. \n\n\n12. Almquist J, Leander J, Jirstrand M. Using sensitivity equations for computing gradients of\nthe FOCE and FOCEI approximations to the population\nlikelihood. Journal of Pharmacokinetics and Pharmacodynamics.\n2015;42(3):191–209. \n\n\n13. Fidler M, Wilkins JJ, Hooijmaijers R, Post TM,\nSchoemaker R, Trame MN, et al. Nonlinear\nMixed-Effects Model Development and Simulation Using nlmixr and Related\nR Open-Source Packages. CPT: Pharmacometrics and Systems\nPharmacology. 2019 Sep;8(9):621–33. \n\n\n14. Schoemaker R, Fidler M, Laveille C, Wilkins JJ,\nHooijmaijers R, Post TM, et al. Performance of the SAEM and FOCEI Algorithms in the\nOpen-Source, Nonlinear Mixed Effect Modeling Tool nlmixr.\nCPT: Pharmacometrics and Systems Pharmacology. 2019;8(12):923–30. \n\n\n15. Fidler M, Hooijmaijers R, Schoemaker R, Wilkins\nJJ, Xiong Y, Wang W. R and nlmixr as a gateway between statistics and\npharmacometrics. CPT: Pharmacometrics and Systems\nPharmacology. 2021 Apr;10(4):283–5."
  }
]